{"version":3,"sources":["component/Api.js","views/Home.js","component/Footer.js","component/CityCard .js","views/Favorites.js","component/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["getWather","cityName","a","console","log","fetch","response","json","data","Home","useState","setCityName","cityTemp","setTemp","weather","setWeather","useContext","favoritsContext","favoriteCity","setfavoriteCity","handleSubmit","e","preventDefault","className","main","type","value","onChange","target","placeholder","onClick","name","Math","floor","temp","temp_max","temp_min","length","Footer","CityCard","map","city","favorite","filter","removeFavorite","Favorites","NavBar","to","createContext","App","Provider","exact","path","component","Favorits","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cd19f07.chunk.js","sourcesContent":["\r\n\r\n\r\n const getWather= async(cityName)=>{\r\n\r\n     console.log(cityName)\r\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=efd3ea1201e83f239fccc461f6d092ac`)\r\n      const data = await response.json()\r\n      console.log(data)\r\n      return data\r\n } \r\n\r\n \r\n\r\n\r\n export default getWather","\r\nimport  { useState,useContext, } from 'react';\r\nimport getWather from '../component/Api';\r\nimport { favoritsContext } from '../App';\r\n\r\n\r\n\r\nfunction Home(){\r\n\r\n    const [cityName, setCityName] = useState(\"\");\r\n    const [cityTemp,setTemp] = useState({});\r\n    const [weather, setWeather] = useState(\"\");\r\n    const {favoriteCity, setfavoriteCity} = useContext(favoritsContext)\r\n    \r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const data=await getWather(cityName)\r\n        setTemp(data)\r\n        setWeather(data)\r\n        console.log(data)\r\n      };\r\n\r\n      const setFavorite = () => {\r\n        if(favoriteCity){\r\n          if ( favoriteCity.length <3){\r\n            setfavoriteCity([...favoriteCity,cityTemp])\r\n            console.log(\"setfavorite\")\r\n          } \r\n        \r\n        }\r\n        \r\n              \r\n    }\r\n\r\n   \r\n   \r\n    return(\r\n      <div className={\r\n\r\n        typeof weather.weather !== \"undefined\"\r\n        ? weather.weather[0].main !== \"Clear\" ? weather.weather[0].main !== \"Mist\" ?\r\n        weather.weather[0].main !== \"Snow\" ? weather.weather[0].main !== \"Rain\" ? weather.weather[0].main !== \"Clouds\" ?\r\n         \"App thander\" :  \"App cloud\" : \"App rain\" : \"App cold\" : \"App mist\": \" App clear\": \"App\"\r\n      \r\n      }>\r\n       <div>\r\n        <h1>weather</h1>\r\n\r\n        <form className=\"search-container\">\r\n      <input className=\"search-bar\" type=\"text\" value={cityName} onChange={(e) => {\r\n        setCityName(e.target.value)}}  placeholder=\"Search\" aria-label=\"Search\"/>\r\n        \r\n      <button className=\"button\" onClick={handleSubmit} type=\"submit\">Search</button>\r\n    </form>\r\n    </div>\r\n    {typeof cityTemp.main != \"undefined\" ?(\r\n\r\n      <div className=\"cityCard\">\r\n                <p>City : {cityTemp.name}</p>\r\n                <p>Weather : { weather.weather ? weather.weather[0].main : null}</p>\r\n                <p>Temperature : {Math.floor(cityTemp.main ? cityTemp.main.temp: null)-273}°c</p>\r\n                <p>Temp max : {Math.floor(cityTemp.main ? cityTemp.main.temp_max:null)-273}°c</p>\r\n                <p>Temp min : {Math.floor(cityTemp.main ? cityTemp.main.temp_min:null)-273}°c</p>\r\n                <button className = \"favorites-btn\" onClick={setFavorite}>addfavorite</button>\r\n            </div>\r\n\r\n)\r\n: (\r\n  <div className=\"not-found\">\r\n    <p>Please type your City Name...</p>\r\n  </div>\r\n )\r\n} \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Home","\r\n\r\n// function Footer(){\r\n//     return(\r\n//         <footer className=\"Footer\">\r\n        \r\n//         <div className=\"text-center p-3\">\r\n//           © 2021 Copyright:\r\n//           <p className=\"text-dark\" >wather update</p>\r\n//         </div>\r\n       \r\n//       </footer>)\r\n      \r\n// }\r\n\r\n// export default Footer\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer p-20\">\r\n      <p>emran</p>\r\n      <p>Août 2021</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, {useContext} from 'react'\r\n\r\nimport { favoritsContext } from '../App'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CityCard = () => {\r\n    const {favoriteCity,setfavoriteCity} = useContext(favoritsContext)\r\n    const removeFavorite = (city) => { \r\n        let favorite = favoriteCity.filter(favorite => favorite.name !== city)\r\n        \r\n        setfavoriteCity(favorite)\r\n            \r\n    }\r\n  \r\n\r\n    return (\r\n        <div className>\r\n                {favoriteCity.map( (cityTemp) => \r\n                   (<div className=\"cityCard\">\r\n                    <p>City : {cityTemp.name}</p>\r\n                    <p>Temperature : {Math.floor(cityTemp.main.temp)-273}</p>\r\n                    <p>Temp min : {Math.floor(cityTemp.main.temp_min)-273}</p>\r\n                    <p>Temp max : {Math.floor( cityTemp.main.temp_max)-273}</p>\r\n                   \r\n                    \r\n                    <button className=\"favorites-btn\" onClick={() => removeFavorite(cityTemp.name)}>Remove to favorite</button>\r\n                    \r\n                </div>)\r\n    \r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CityCard;","\r\nimport CityCard from \"../component/CityCard \"\r\nfunction Favorites(){\r\n   console.log(CityCard)\r\n   return(\r\n        <div className=\"favorites\">\r\n\r\n           <CityCard />\r\n        </div>\r\n          \r\n   )\r\n}\r\n\r\nexport default Favorites","import { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav>\r\n      <ul className=\"navWrapper\">\r\n        <h2>weather app</h2>\r\n        <li>\r\n          <Link className=\"navLink\" to=\"/\">\r\n            Accueil\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link className=\"navLink\" to=\"/Favortis\">\r\n            Favoris\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import {BrowserRouter,Switch,Route} from \"react-router-dom\"\nimport Home from \"./views/Home\";\nimport Footer from \"./component/Footer\";\nimport Favorits from \"./views/Favorites\";\nimport NavBar from \"./component/Navbar\";\nimport{createContext,useState} from \"react\"\n\nimport \"./App.css\";\n\nexport const favoritsContext = createContext([]);\nfunction App() {\n  const [favoriteCity, setfavoriteCity] = useState([])\n  return (\n    <BrowserRouter>\n  <div className=\"page-container\">\n    \n    <div className=\"content-wrap\">\n\n     <favoritsContext.Provider value={{favoriteCity, setfavoriteCity}}>\n      <NavBar />\n\n      <Switch>\n      <Route exact path=\"/\"  component={Home} />\n      <Route  exact path=\"/Favortis\"  component={Favorits} />\n      </Switch>\n      </favoritsContext.Provider>\n    </div>\n        <Footer />\n  </div>\n    \n    </BrowserRouter>\n    \n      \n\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}